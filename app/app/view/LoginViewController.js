/*
 * File: app/view/LoginViewController.js
 *
 * This file was generated by Sencha Architect version 4.2.9.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 7.3.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 7.3.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('app.view.LoginViewController', {
    extend: 'Ext.app.ViewController',
    alias: 'controller.login',

    onButtonClick: function(button, e, eOpts) {


        const form = button.up('form').getForm();
        const {email,password} = form.getValues();

        if(form.isValid()){
            Ext.Ajax.request({
                scope:this,
                url:'http://auth.test/api/auth/login',
                method: 'POST',
                params:{
                    email,password
                },
                success: function(response){
                    const result = Ext.decode(response.responseText);

                    console.log(result);

                    // localStorage.setItem('user-info',JSON.stringify(access_token));

                    const view = this.getView();
                    const access_token = localStorage.getItem('access_token');
                    console.log(access_token);
                    view.destroy();


                    Ext.Ajax.request({
                        url:'http://auth.test/api/auth/myaccount',
                        method:'POST',
                        headers:{
                            'Authorization':`Bearer ${access_token}`
                        },
                        success:(response)=>{
                            const result = Ext.decode(response.responseText);
                            const roles =  result.data.role;
                            if(roles.filter((e)=>e==='user')=='user'){
                                Ext.create('app.view.User').show();
                            }

                            if(roles.filter((e)=>e==='admin')=='admin'){
                                Ext.create('app.view.Admin').show();
                            }
                        },
                        failure:(response)=>{
                            const result = Ext.decode(response.responseText);
                            console.log(result);
                        }
                    });



                },
                failure: function(response)
                {
                    console.log("QUE CHOU",response.responseText);

                    var result = Ext.decode(response.responseText);
                    var message=result.message;
                    Ext.MessageBox.show({
                        title: 'Alerta',
                        msg: message,
                        buttons: Ext.MessageBox.OK,
                        //animateTarget: btn,
                        scope: this,
                        //fn: this.showResult,
                        icon: Ext.MessageBox.WARNING
                    });

                }
            });
        }else{
            Ext.Msg.alert( "Error!", "Credenciales incorrectas!" );

        }
    },

    onWindowAfterRender: function(component, eOpts) {

        /*const store = JSON.parse(localStorage.getItem('user-info'));
        if(store){
        if(store.data.role.find((e)=>e==='user')==='user'){
        Ext.create('app.view.User').show();
        }
        if(store.data.role.find((e)=>e==='admin')==='admin'){
        Ext.create('app.view.Admin').show();

        }
        }else{
        Ext.create('app.view.App').show();
        }
        */
    }

});
