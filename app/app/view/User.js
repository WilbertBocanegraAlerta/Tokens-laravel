/*
 * File: app/view/User.js
 *
 * This file was generated by Sencha Architect version 4.2.9.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 7.3.x Classic library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 7.3.x Classic. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('app.view.User', {
    extend: 'Ext.container.Viewport',
    alias: 'widget.user',

    requires: [
        'app.view.UserViewModel',
        'app.view.UserViewController',
        'Ext.form.Label',
        'Ext.button.Button',
        'Ext.grid.Panel',
        'Ext.view.Table',
        'Ext.grid.column.Action'
    ],

    controller: 'user',
    viewModel: {
        type: 'user'
    },
    height: 250,
    style: 'background:white;',
    width: 400,
    defaultListenerScope: true,

    layout: {
        type: 'vbox',
        align: 'stretch'
    },
    items: [
        {
            xtype: 'container',
            height: 60,
            layout: {
                type: 'hbox',
                align: 'stretch'
            },
            items: [
                {
                    xtype: 'container',
                    flex: 1,
                    style: 'padding:10px 0 10px 20px;',
                    layout: {
                        type: 'vbox',
                        align: 'stretch'
                    },
                    items: [
                        {
                            xtype: 'label',
                            flex: 1,
                            id: 'title-admin-user1'
                        },
                        {
                            xtype: 'label',
                            flex: 1,
                            id: 'title-admin-rol1'
                        }
                    ]
                },
                {
                    xtype: 'container',
                    flex: 1,
                    style: 'padding:5px; text-transform:uppercase; letter-spacing:0.1;',
                    layout: {
                        type: 'hbox',
                        align: 'stretch',
                        pack: 'end'
                    },
                    items: [
                        {
                            xtype: 'button',
                            style: 'border-radius:10px; margin:0 20px;',
                            text: 'agregar',
                            listeners: {
                                click: 'onButtonClick'
                            }
                        },
                        {
                            xtype: 'button',
                            style: 'border-radius:10px;',
                            text: 'cerrar sesiÃ³n',
                            listeners: {
                                click: {
                                    fn: 'singin1',
                                    scope: 'controller'
                                }
                            }
                        }
                    ]
                }
            ]
        },
        {
            xtype: 'container',
            flex: 1,
            layout: {
                type: 'hbox',
                align: 'stretch'
            },
            items: [
                {
                    xtype: 'container',
                    flex: 1,
                    style: 'padding:0 5px;',
                    layout: {
                        type: 'vbox',
                        align: 'stretch'
                    },
                    items: [
                        {
                            xtype: 'gridpanel',
                            flex: 1,
                            height: '',
                            id: 'table-complete',
                            title: 'Completas',
                            columns: [
                                {
                                    xtype: 'gridcolumn',
                                    flex: 1,
                                    dataIndex: 'content',
                                    text: 'Tareas'
                                },
                                {
                                    xtype: 'actioncolumn',
                                    text: 'Eliminar',
                                    items: [
                                        {
                                            handler: function(view, rowIndex, colIndex, item, e, record, row) {
                                                const access_token = localStorage.getItem('access_token');

                                                Ext.Ajax.request({
                                                    url:`http://auth.test/api/task/remove/${record.id}`,
                                                    method:'DELETE',
                                                    headers:{
                                                        'Authorization':`Bearer ${access_token}`
                                                    },
                                                    success:({responseText})=>{
                                                    const result = Ext.decode(responseText);
                                                    console.log(result);
                                                    view.grid.store.remove(record);
                                                },
                                                failure:({responseText})=>{
                                                const result = Ext.decode(responseText);
                                                console.log(result);
                                            }
                                        });
                                            },
                                            iconCls: 'x-fa fa-trash red'
                                        }
                                    ]
                                },
                                {
                                    xtype: 'actioncolumn',
                                    text: 'Completar',
                                    items: [
                                        {
                                            handler: function(view, rowIndex, colIndex, item, e, record, row) {
                                                const access_token = localStorage.getItem('access_token');
                                                const tablein = Ext.getCmp('table-incomplete');
                                                console.log(tablein);

                                                Ext.Ajax.request({
                                                    url:`http://auth.test/api/task/update/${record.id}`,
                                                    method:'PUT',
                                                    headers:{
                                                        'Authorization':`Bearer ${access_token}`
                                                    },
                                                    params:{
                                                        status:1
                                                    },
                                                    success:({responseText})=>{
                                                    const result = Ext.decode(responseText);
                                                    view.grid.store.remove(record);
                                                    tablein.store.add(record);
                                                    console.log(result);
                                                },
                                                failure:({responseText})=>{
                                                const result = Ext.decode(responseText);
                                                console.log(result);
                                            }
                                        });
                                            },
                                            iconCls: 'x-fa fa-check'
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    xtype: 'container',
                    flex: 1,
                    style: 'padding: 0 5px;',
                    layout: {
                        type: 'vbox',
                        align: 'stretch'
                    },
                    items: [
                        {
                            xtype: 'gridpanel',
                            flex: 1,
                            id: 'table-incomplete',
                            title: 'Incompletas',
                            columns: [
                                {
                                    xtype: 'gridcolumn',
                                    flex: 1,
                                    dataIndex: 'content',
                                    text: 'Tareas'
                                }
                            ],
                            listeners: {
                                cellclick: 'onTableincompleteCellClick'
                            }
                        }
                    ]
                }
            ]
        }
    ],
    listeners: {
        afterrender: {
            fn: 'onViewportAfterRender',
            scope: 'controller'
        }
    },

    onButtonClick: function(button, e, eOpts) {
        Ext.create('app.view.Task').show();
    },

    onTableincompleteCellClick: function(tableview, td, cellIndex, record, tr, rowIndex, e, eOpts) {
        const access_token = localStorage.getItem('access_token');
        const tablein = Ext.getCmp('table-complete');
        console.log(tablein);

        Ext.Ajax.request({
            url:`http://auth.test/api/task/update/${record.id}`,
            method:'PUT',
            headers:{
                'Authorization':`Bearer ${access_token}`
            },
            params:{
                status:0
            },
            success:({responseText})=>{
                const result = Ext.decode(responseText);
                tableview.grid.store.remove(record);
                tablein.store.add(record);
                console.log(result);
            },
            failure:({responseText})=>{
                const result = Ext.decode(responseText);
                console.log(result);
            }
        });
    }

});